import { CELL_STATE } from './game-of-life';

export interface Pattern {
  name: string;
  pattern: number[][];
}

export const PATTERNS: Pattern[] = [
  {
    name: 'Random',
    pattern: [],
  },
  {
    name: 'Glider',
    pattern: [
      [0, CELL_STATE.NEW, 0],
      [0, 0, CELL_STATE.NEW],
      [CELL_STATE.NEW, CELL_STATE.NEW, CELL_STATE.NEW],
    ],
  },
  {
    name: 'Pulsar',
    pattern: [
      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0],
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  },
  {
    name: 'Gosper Glider Gun',
    pattern: [
      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      [1,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  },
  {
    name: 'Diehard',
    pattern: [
      [0, 0, 0, 0, 0, 0, 1, 0],
      [1, 1, 0, 0, 0, 0, 0, 0],
      [0, 1, 0, 0, 0, 1, 1, 1],
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  },
  {
    name: 'Acorn',
    pattern: [
      [0, 1, 0, 0, 0, 0, 0],
      [0, 0, 0, 1, 0, 0, 0],
      [1, 1, 0, 0, 1, 1, 1],
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  },
  {
    name: 'R-pentomino',
    pattern: [
      [0, 1, 1],
      [1, 1, 0],
      [0, 1, 0],
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  },
  {
    name: 'Lightweight spaceship',
    pattern: [
      [1, 0, 0, 1, 0],
      [0, 1, 1, 1, 1],
      [1, 1, 1, 1, 0],
      [0, 0, 1, 1, 0]
    ].map(row => row.map(cell => cell === 1 ? CELL_STATE.NEW : CELL_STATE.DEAD)),
  }
];
